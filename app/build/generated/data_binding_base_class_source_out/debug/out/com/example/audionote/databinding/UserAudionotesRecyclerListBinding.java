// Generated by view binder compiler. Do not edit!
package com.example.audionote.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.audionote.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserAudionotesRecyclerListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView dataOfTheNote;

  @NonNull
  public final ImageButton deleteCurrentAudioNote;

  @NonNull
  public final Guideline middleLine;

  @NonNull
  public final ImageButton playOrPause;

  @NonNull
  public final TextView userTitleNote;

  private UserAudionotesRecyclerListBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView dataOfTheNote, @NonNull ImageButton deleteCurrentAudioNote,
      @NonNull Guideline middleLine, @NonNull ImageButton playOrPause,
      @NonNull TextView userTitleNote) {
    this.rootView = rootView;
    this.dataOfTheNote = dataOfTheNote;
    this.deleteCurrentAudioNote = deleteCurrentAudioNote;
    this.middleLine = middleLine;
    this.playOrPause = playOrPause;
    this.userTitleNote = userTitleNote;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserAudionotesRecyclerListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserAudionotesRecyclerListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_audionotes_recycler_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserAudionotesRecyclerListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.data_of_the_note;
      TextView dataOfTheNote = ViewBindings.findChildViewById(rootView, id);
      if (dataOfTheNote == null) {
        break missingId;
      }

      id = R.id.deleteCurrentAudioNote;
      ImageButton deleteCurrentAudioNote = ViewBindings.findChildViewById(rootView, id);
      if (deleteCurrentAudioNote == null) {
        break missingId;
      }

      id = R.id.middleLine;
      Guideline middleLine = ViewBindings.findChildViewById(rootView, id);
      if (middleLine == null) {
        break missingId;
      }

      id = R.id.play_or_pause;
      ImageButton playOrPause = ViewBindings.findChildViewById(rootView, id);
      if (playOrPause == null) {
        break missingId;
      }

      id = R.id.user_title_note;
      TextView userTitleNote = ViewBindings.findChildViewById(rootView, id);
      if (userTitleNote == null) {
        break missingId;
      }

      return new UserAudionotesRecyclerListBinding((ConstraintLayout) rootView, dataOfTheNote,
          deleteCurrentAudioNote, middleLine, playOrPause, userTitleNote);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
